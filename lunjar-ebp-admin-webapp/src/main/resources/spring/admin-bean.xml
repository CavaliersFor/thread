<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://code.alibabatech.com/schema/dubbo  
     http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<description>基础平台-后台管理</description>

	<context:component-scan base-package="com.lunjar.ebp.admin.biz" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="${jdbc.maxActive}" />
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="${jdbc.initialSize}" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效保留， 并在下次调用getConnection()的时候继续尝试获取连接。 如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。 
			Default: false -->
		<property name="breakAfterAcquireFailure" value="false" />
		<!--因性能消耗大请只在需要的时候使用它。 如果设为true那么在每个connection提交的时候都将校验其有效性。 建议使用idleConnectionTestPeriod或automaticTestTable等方法来提升连接测试的性能。 
			Default: false -->
		<property name="testConnectionOnCheckout" value="false" />
	</bean>

	<!-- transaction config -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	<!-- 支持 @Transactional 标记 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- jdbcTemplate config -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- mybatis config -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 别名扫描的package -->
		<property name="typeAliasesPackage" value="com.lunjar.ebp.admin.domain.model,com.lunjar.ebp.admin.domain.query" />
		<!--mybatis Mapper.xml文件的路径 -->
		<property name="mapperLocations" value="classpath*:mappers/*Mapper.xml" />
		<property name="databaseIdProvider" ref="databaseIdProvider" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--mybatis Mapper.java文件的package -->
		<property name="basePackage" value="com.lunjar.ebp.admin.biz.mappers" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- EhCache -->
	<bean id="ehCacheManagerAdmin" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation">
			<value>classpath:admin-ehcache.xml</value>
		</property>
		<property name="cacheManagerName" value="ehCacheManagerAdmin" />
	</bean>

	<!-- 自定义枚举类创建器 -->
	<bean class="com.lunjar.ebp.admin.domain.enums.DataDictionaryEnumAdminBuildor"></bean>

	<!-- dubbo -->
	<dubbo:application name="admin-webapp" />
	<dubbo:registry protocol="zookeeper" address="${dubbo.registry.address}" check="false"  register="false"/>
	
	
	<!-- 登录用户读取过滤器排除 -->
	<bean id="adminLoginUserFilterExcludor" class="com.lunjar.products.core.utils.Excludor">
		<property name="excludes">
			<list>
				<value>/pagenotfind</value>		
				<value>/login</value>
				<value>/logout</value>
				<value>/</value>
			</list>
		</property>
	</bean>	
<bean id="adminAgentSession" class="com.lunjar.ebp.admin.web.session.AdminAgentSession" ></bean>

	<bean id="enterpriseAgentSession" class="com.lunjar.ebp.admin.web.session.EnterpriseAgentSession" ></bean>	
	<!-- 登录用户读取器 -->
	<bean id="adminLoginUserFilter" class="com.lunjar.ebp.admin.web.filter.AdminLoginUserFilter">
		<property name="enterpriseAgentSession" ref="enterpriseAgentSession"></property>
		<property name="excludor" ref="adminLoginUserFilterExcludor"></property>
	</bean>	
</beans>
